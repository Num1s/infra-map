import osmnx as ox
import geopandas as gpd
import pandas as pd
from shapely.geometry import Polygon
import matplotlib.pyplot as plt

# –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–π–æ–Ω–∞
district_name = "–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω, –ë–∏—à–∫–µ–∫, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω"

# –ü–æ–ª—É—á–∞–µ–º –≥–µ–æ–º–µ—Ç—Ä–∏—é —Ä–∞–π–æ–Ω–∞
print("‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —Ä–∞–π–æ–Ω–∞...")
district = ox.geocode_to_gdf(district_name)
district_polygon = district.geometry.iloc[0]

# –ü–æ–ª—É—á–∞–µ–º –∑–¥–∞–Ω–∏—è
print("‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–¥–∞–Ω–∏—è...")
buildings = ox.features_from_place(district_name, {'building': True})
buildings = gpd.clip(buildings, district)

# –ü–æ–ª—É—á–∞–µ–º –¥–æ—Ä–æ–≥–∏
print("‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Ä–æ–≥–∏...")
roads_graph = ox.graph_from_place(district_name, network_type='drive')
roads = ox.graph_to_gdfs(roads_graph, nodes=False)

# –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∫–∏, –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –∑–æ–Ω—ã –∏ –≤–æ–¥—É
print("‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–µ–ª–µ–Ω—ã–µ –∑–æ–Ω—ã –∏ –≤–æ–¥—É...")
landuse = ox.features_from_place(district_name, {'landuse': True})
natural = ox.features_from_place(district_name, {'natural': ['water', 'wood']})
parks = ox.features_from_place(district_name, {'leisure': 'park'})

# –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∑–∞–Ω—è—Ç—ã–µ —É—á–∞—Å—Ç–∫–∏
print("üõ†Ô∏è –û–±—ä–µ–¥–∏–Ω—è–µ–º –∑–∞–Ω—è—Ç—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏...")
all_geoms = pd.concat([
    buildings[['geometry']],
    roads[['geometry']],
    landuse[['geometry']],
    natural[['geometry']],
    parks[['geometry']]
], ignore_index=True)

used = all_geoms.geometry.union_all()

# –í—ã—á–∏—Ç–∞–µ–º –∑–∞–Ω—è—Ç—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –∏–∑ —Ä–∞–π–æ–Ω–∞
print("üìê –í—ã—á–∏—Å–ª—è–µ–º —Å–≤–æ–±–æ–¥–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏...")
free_space = district_polygon.difference(used)

# –û—Ç–±–∏—Ä–∞–µ–º —É—á–∞—Å—Ç–∫–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
print("üßπ –§–∏–ª—å—Ç—Ä—É–µ–º –º–µ–ª–∫–∏–µ —É—á–∞—Å—Ç–∫–∏...")
if free_space.is_empty:
    free_areas = []
elif free_space.geom_type == 'MultiPolygon':
    free_areas = [poly for poly in free_space.geoms if poly.area > 5000]
elif free_space.geom_type == 'Polygon':
    free_areas = [free_space] if free_space.area > 5000 else []
else:
    free_areas = []

# –§–æ—Ä–º–∏—Ä—É–µ–º GeoDataFrame
free_gdf = gpd.GeoDataFrame(geometry=free_areas, crs=district.crs)

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
if not free_gdf.empty and free_gdf.is_valid.all():
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤: {len(free_gdf)}")
    ax = district.plot(edgecolor='black', facecolor='none', figsize=(8, 8))
    free_gdf.plot(ax=ax, color='green', alpha=0.5)
    plt.title("–°–≤–æ–±–æ–¥–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏ –ø–æ–¥ –∑–∞—Å—Ç—Ä–æ–π–∫—É")
    plt.show()
else:
    print("‚ùó –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–≤–æ–±–æ–¥–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
